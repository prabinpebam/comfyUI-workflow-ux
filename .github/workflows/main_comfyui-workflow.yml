# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - ComfyUI-workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          npm ci

      - name: Create required directories
        run: |
          mkdir -p docs/workflow
          mkdir -p temp
          echo '{"workflows":[]}' > docs/workflow/manifest.json

      - name: Build Production
        env:
          NODE_ENV: production
          MONGODB_USER: ${{ secrets.MONGODB_USER }}
          MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
        run: |
          # Clean and create dist directories
          rm -rf dist
          mkdir -p dist/server
          mkdir -p dist/public/js
          mkdir -p dist/public/css
          mkdir -p dist.public/lib
          mkdir -p dist.public/workflow
          
          # Build TypeScript
          npm run build:prod:server
          npm run build:prod:browser
          
          # Copy static files
          cp -r docs/*.html dist/public/
          cp -r docs/css dist/public/ || true
          cp -r docs/icons dist/public/ || true
          cp -r docs/images dist/public/ || true
          cp -r docs/lib dist/public/ || true
          cp -r docs/workflow/* dist/public/workflow/ || true
          
          # Copy server files
          cp package.json dist/
          [ -f "web.config" ] && cp web.config dist/ || true

      - name: Create deployment package
        run: |
          # Create a deployment directory
          mkdir -p deploy
          # Copy dist contents to deploy
          cp -r dist/* deploy/
          # Create zip from deploy directory
          cd deploy && zip -r ../release.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    permissions:
      id-token: write   # This is required for Azure login
      contents: read    # This is required for actions/checkout

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_D1442B3D933E453B956D123D248C180D }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8266F4345EE8469093974EF94B01DCC4 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_0B9708F5D0544EEAA777B3BB643F6096 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ComfyUI-workflow'
          slot-name: 'Production'
          package: .

      - name: Configure App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: 'ComfyUI-workflow'
          app-settings-json: |
            [
              {
                "name": "NODE_ENV",
                "value": "production"
              },
              {
                "name": "MONGODB_USER",
                "value": "${{ secrets.MONGODB_USER }}"
              },
              {
                "name": "MONGODB_PASSWORD",
                "value": "${{ secrets.MONGODB_PASSWORD }}"
              },
              {
                "name": "MONGODB_HOST",
                "value": "${{ secrets.MONGODB_HOST }}"
              },
              {
                "name": "MONGODB_PORT",
                "value": "${{ secrets.MONGODB_PORT }}"
              },
              {
                "name": "MONGODB_REPLICA_SET",
                "value": "${{ secrets.MONGODB_REPLICA_SET }}"
              }
            ]
